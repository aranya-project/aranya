name: "Unit tests"

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  workflow_call:
    inputs:
      workflow:
        required: true
        type: string

env:
  REV: ${{ github.run_id }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.workflow || 'direct' }}-${{ github.ref != 'refs/heads/main' || github.run_id }}
  cancel-in-progress: true

jobs:
  unit-tests:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - ubuntu2404-arm64-4core
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Unit Tests
        run: cargo make test

  c-example-application:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - ubuntu2404-arm64-4core
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: C Example Application
        run: |
          export CC=clang
          cargo make example-c

  rust-example-application:
    strategy:
      matrix:
        runner:
          - ubuntu-latest
          - ubuntu2404-arm64-4core
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Rust Example Application
        run: |
          cargo make example-rust
