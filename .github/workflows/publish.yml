name: "Publish Release Artifacts To GitHub Release On Tag Creation"

on:
  workflow_dispatch:
    inputs:
      workflow:
        required: true
        type: string
      tag:
        required: true
        type: string
  workflow_call:
    inputs:
      workflow:
        required: true
        type: string
      tag:
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.workflow }}-${{ github.ref != 'refs/heads/main' || github.run_id }}-${{ inputs.tag }}

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: release
        uses: aranya-project/release-action@main
        with:
          allowUpdates: true
          prerelease: false
          makeLatest: legacy
          tag: ${{ inputs.tag }}
    outputs:
      upload-url: ${{ steps.release.outputs.upload_url }}

  build:
    uses: ./.github/workflows/build.yml
    with:
      workflow: build

  docs:
    uses: ./.github/workflows/doc.yml
    with:
      workflow: doc

  publish-daemon:
    permissions:
      contents: write
    needs:
      - release
      - build
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
    name: publish daemon ${{ matrix.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Rust doc artifacts
        uses: actions/download-artifact@v4
        with:
          name: aranya-daemon-${{ matrix.target }}
          path: aranya-daemon-${{ matrix.target }}
      - name: List files
        run: ls -R -al
      - name: Upload Rust docs to tagged release
        uses: actions/upload-release-asset@v1.0.2
        env:
            GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: aranya-daemon-${{ matrix.target }}/aranya-daemon.tar.gz
          asset_name: aranya-daemon-${{ inputs.tag }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

  publish-capi-lib:
    permissions:
      contents: write
    needs:
      - release
      - build
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
    name: publish capi ${{ matrix.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Rust doc artifacts
        uses: actions/download-artifact@v4
        with:
          name: aranya-client-capi-${{ matrix.target }}
          path: aranya-client-capi-${{ matrix.target }}
      - name: List files
        run: ls -R -al
      - name: Upload Rust docs to tagged release
        uses: actions/upload-release-asset@v1.0.2
        env:
            GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: aranya-client-capi-${{ matrix.target }}/aranya-client-lib.tar.gz
          asset_name: aranya-client-capi-${{ inputs.tag }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

  publish-capi-docs:
    permissions:
      contents: write
    needs:
      - release
      - docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download capi doc artifacts
        uses: actions/download-artifact@v4
        with:
          name: aranya-client-capi-docs
          path: aranya-client-capi-docs

      - name: Extract
        run:  |
          cd aranya-client-capi-docs
          tar -xzf aranya-client-capi-docs.tar.gz

      - name: List files
        run: ls -R -al

      - name: Deploy to GitHub Pages
        uses: aranya-project/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: aranya-client-capi-docs/html
          target-folder: capi/${{ inputs.tag }}

      - name: Upload capi docs to tagged release
        uses: actions/upload-release-asset@v1.0.2
        env:
            GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: aranya-client-capi-docs/aranya-client-capi-docs.tar.gz
          asset_name: aranya-client-capi-docs-${{ inputs.tag }}.tar.gz
          asset_content_type: application/gzip
