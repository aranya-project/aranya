# Workflow for automating Rust crate release.

name: Release

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  # Release unreleased crates and create a git tag
  release:
    name: Release
    runs-on: ubuntu-latest
    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup

      - name: Install cargo-release
        uses: aranya-project/install-action@main
        with:
          tool: cargo-release@0.25.15

      - name: Create tags
        id: tag
        run: cargo release tag -v --execute
        # Continue on error so we don't get a CI failure (red X) when no release is needed.
        # Each following step must check `steps.tag.outcome` (NOT `steps.tag.conclusion`).
        continue-on-error: true

      - name: Publish to crates.io
        if: success() && steps.tag.outcome == 'success'
        run: cargo release publish -v --execute
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.ARANYA_BOT_CRATESIO_CARGO_LOGIN_KEY }}

      - name: Push tags to github
        if: success() && steps.tag.outcome == 'success'
        run: cargo release push -v --execute
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Call publish workflow
        if: success() && steps.tag.outcome == 'success'
        uses: ./.github/workflows/publish.yml
        with:
          workflow: publish
