name: "Setup build tools"
description: "Action for setting up build tools"

runs:
  using: "composite"
  steps:
    - name: Version info
      shell: bash
      run: |
        cargo --version --verbose
        ldd --version
        clang --version
        gcc --version
        cmake --version

    - name: Update dependencies
      shell: bash
      run: sudo apt-get update

    - name: Install lld linker
      shell: bash
      run: |
        sudo apt-get install -y lld --no-install-recommends
        lld --version

    - name: Configure faster linker
      shell: bash
      run: |
        mkdir -p .cargo
        echo '# Auto-generated by CI setup action' >> .cargo/config.toml
        echo '# Use lld linker for faster linking' >> .cargo/config.toml
        echo '[target.x86_64-unknown-linux-gnu]' >> .cargo/config.toml
        echo 'linker = "clang"' >> .cargo/config.toml
        echo 'rustflags = ["-C", "link-arg=-fuse-ld=lld"]' >> .cargo/config.toml
        echo '[target.aarch64-unknown-linux-gnu]' >> .cargo/config.toml
        echo 'linker = "clang"' >> .cargo/config.toml
        echo 'rustflags = ["-C", "link-arg=-fuse-ld=lld"]' >> .cargo/config.toml

    - name: patchelf
      shell: bash
      run: |
        sudo apt-get install -y patchelf \
            --no-install-recommends
        patchelf --version

    - name: doxygen
      shell: bash
      run: |
        sudo apt-get install -y doxygen \
            --no-install-recommends
        doxygen --version

    - name: Install sccache
      uses: aranya-project/sccache-action@main
      with:
        version: "v0.10.0"

    - name: Configure sccache
      run: |
        echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
        echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
      shell: bash

    - name: Install cargo-make
      run: cargo install --version '0.37.23' --locked cargo-make
      shell: bash

    - name: Install Protoc
      shell: bash
      run: |
        sudo apt-get install -y protobuf-compiler
        protoc --version
