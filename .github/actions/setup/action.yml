name: "Setup build tools"
description: "Action for setting up build tools"

runs:
  using: "composite"
  steps:
    - name: Version info
      shell: bash
      run: |
        cargo --version --verbose
        ldd --version
        clang --version
        gcc --version
        cmake --version

    - name: Update dependencies
      shell: bash
      run: sudo apt-get update

    - name: Install mold linker
      shell: bash
      run: |
        sudo apt-get install -y mold --no-install-recommends
        mold --version

    - name: Configure faster linker
      shell: bash
      run: |
        # Check the Rust version
        RUST_VERSION=$(rustc --version | cut -d' ' -f2)
        echo "Rust Version: $RUST_VERSION"

        mkdir -p .cargo

        if command -v mold &> /dev/null; then
          echo "Using mold linker"
          cat > .cargo/config.toml << 'EOF'
# Auto-generated by CI setup action
# Use mold linker for faster linking

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=mold"]

[target.aarch64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=mold"]
EOF
        else:
          echo "Using lld linker"
          cat > .cargo/config.toml << 'EOF'
# Auto-generated by CI setup action
# Use lld linker for faster linking

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=lld"]

[target.aarch64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=lld"]
EOF
        fi

    - name: patchelf
      shell: bash
      run: |
        sudo apt-get install -y patchelf \
            --no-install-recommends
        patchelf --version

    - name: doxygen
      shell: bash
      run: |
        sudo apt-get install -y doxygen \
            --no-install-recommends
        doxygen --version

    - name: Install sccache
      uses: aranya-project/sccache-action@main
      with:
        version: "v0.10.0"

    - name: Configure sccache
      run: |
        echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
        echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
      shell: bash

    - name: Install cargo-make
      run: cargo install --version '0.37.23' --locked cargo-make
      shell: bash

    - name: Install Protoc
      shell: bash
      run: |
        sudo apt-get install -y protobuf-compiler
        protoc --version
