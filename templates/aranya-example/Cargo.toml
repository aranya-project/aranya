[package]
name = "aranya-example"
description = "Example Rust program using the Aranya client library"
version = "0.1.0"
authors = ["SpiderOak, Inc."]
edition = "2021"
license = "AGPL-3.0-only"
repository = "https://github.com/aranya-project/aranya"
rust-version = "1.81"

[workspace]

[lints.rust]
# missing_docs = "warn"
rust_2018_idioms = { level = "warn", priority = -1 }
unsafe_op_in_unsafe_fn = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"

[lints.clippy]
cast_lossless = "warn"
cast_possible_wrap = "warn"
cast_precision_loss = "warn"
cast_sign_loss = "warn"
panic = "warn"
unsafe_derive_deserialize = "warn"
undocumented_unsafe_blocks = "warn"
unwrap_used = "warn"
wildcard_imports = "warn"

[dependencies]
# To allow `cargo-generate` to work, explicitly define dependency versions rather than importing the repo's workspace `Cargo.toml`.
# TODO: use `cargo-generate` liquid rhai filters to autopopulate dependency versions.

aranya-client = { version = "0.2.0" }
aranya-daemon = { version = "0.2.0" }

aranya-daemon-api = { version = "0.2.0" }
aranya-fast-channels = { version = "0.1.0", features = ["posix", "std", "memory"] }
aranya-util = { version = "0.1.0" }

anyhow = { version = "1.0.86" }
backon = { version = "1.2.0" }
tempfile = { version = "3.6.0" }
tokio = { version = "1.40", features = ["io-util", "macros", "net", "sync"] }
tracing = { version = "0.1.40" }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
